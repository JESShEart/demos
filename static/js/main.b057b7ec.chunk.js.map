{"version":3,"sources":["react/person/person-form.component.js","react/debt/debt-form.component.js","redux/person/person.constants.js","redux/person/person.reducer.js","redux/debt/debt.constants.js","redux/debt/debt-client.reducer.js","redux/debt/debt.reducer.js","redux/index.reducer.js","react/debug/print-state.component.js","react/debug/print-state.container.js","redux/person/person.actions.js","react/person/person-form.container.js","react/person/borrower-check.component.js","react/person/person-table-row.component.js","react/person/person-table.component.js","react/person/person-table.container.js","redux/debt/debt.actions.js","react/debt/debt-form.container.js","react/debt/is-consolidated-check.component.js","react/debt/is-new-debt-check.component.js","react/debt/is-client-check.component.js","react/debt/debt-table-row.component.js","react/debt/debt-table.component.js","react/debt/debt-table.container.js","react/results/results.component.js","react/results/results.container.js","react/tabs.component.js","react/tabs.container.js","react/App.js","load-test-data.js","index.js"],"names":["name","annualIncome","isBorrower","formRef","debtType","lendableEquity","totalValue","amountOwed","monthlyPayment","remainingTermMonths","interestRate","isConsolidated","isNewDebt","clients","PersonEvents","personReducer","state","arguments","length","undefined","action","type","Object","toConsumableArray","concat","payload","filter","person","id","map","personBorrower","assign","DebtEvents","DebtTypes","AUTO","HOME","INVESTMENT_PROPERTY","INVESTMENT","UNSECURED","OTHER","getDefaultLendableEquity","debtClientReducer","debtClient","isClient","c","personId","debtReducer","debt","debtConsolidated","debtIsNew","debtId","combineReducers","personList","debtList","PrintState","_ref","react_default","a","createElement","className","onClick","console","log","connect","dispatch","nextPersonId","addPerson","PersonFormComponent","onAddPerson","ref","el","onSubmit","e","preventDefault","value","trim","checked","reset","focus","htmlFor","autoComplete","required","node","defaultChecked","BorrowerCheckComponent","updatePersonBorrower","onChange","event","target","PersonTableRowComponent","onDelete","number_format_default","displayType","thousandSeparator","prefix","borrower_check_component","PersonTable","deletePerson","person_table_row_component","key","ownProps","nextDebt","addDebt","DebtFormComponent","keys","defaultValue","min","step","ConsolidatedCheckComponent","updateIsConsolidated","NewDebtCheckComponent","updateIsNewDebt","ClientCheckComponent","updateClient","indexOf","DebtTableRowComponent","is_consolidated_check_component","is_new_debt_check_component","is_client_check_component","DebtTableComponent","deleteDebt","debt_table_row_component","updateIsConcolidated","ResultsComponent","_ref3","class","reduce","acc","getTotalAssets","_ref2","getTotalLiabilities","getTotalLendableEquity","TabsComponent","role","data-toggle","href","aria-controls","aria-selected","getDisabled","aria-labelledby","person_form_container","person_table_container","debt_form_container","debt_table_container","results_container","App","tabs_container","print_state_container","loadData","store","createStore","rootReducer","render","es","react_App","document","getElementById"],"mappings":"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","file":"static/js/main.b057b7ec.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nlet name, annualIncome, isBorrower, formRef;\n\nconst PersonFormComponent = ({ onAddPerson }) => (\n  <div>\n    <form ref={(el) => (formRef = el)}\n          onSubmit={e => {\n            e.preventDefault();\n\n            if (!name.value.trim() || !+annualIncome.value.trim()) {\n              return\n            }\n\n            onAddPerson({\n              name: name.value,\n              annualIncome: +annualIncome.value,\n              isBorrower: isBorrower.checked\n            });\n\n            name.value = '';\n            formRef.reset();\n            name.focus();\n          }}\n    >\n      <div className=\"row\">\n        <div className=\"col\">\n          <label htmlFor=\"name\">Name</label>\n          <input id=\"name\"\n                 className=\"form-control\"\n                 autoComplete='off'\n                 required={true}\n                 ref={node => (name = node)} />\n        </div>\n        <div className=\"col\">\n          <label htmlFor=\"annualIncome\">Annual Income</label>\n          <input id=\"annualIncome\"\n                 className=\"form-control\"\n                 autoComplete='off'\n                 required={true}\n                 ref={node => (annualIncome = node)}\n                 type='number' />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <input id=\"isBorrower\"\n                 ref={node => (isBorrower = node)}\n                 defaultChecked={true}\n                 type='checkbox'/>\n          <label htmlFor=\"isBorrower\" className=\"pl-2\">Is Borrower</label>\n        </div>\n      </div>\n      <button className=\"btn btn-primary\" type=\"submit\">Add Person</button>\n    </form>\n  </div>\n)\n\nPersonFormComponent.propTypes = {\n  onAddPerson: PropTypes.func.isRequired\n}\n\nexport default PersonFormComponent","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport {DebtTypes, getDefaultLendableEquity} from \"../../redux/debt/debt.constants\";\n\nlet formRef, debtType, lendableEquity, totalValue, amountOwed, monthlyPayment, remainingTermMonths, interestRate, isConsolidated, isNewDebt, clients;\nclients = [];\nlendableEquity = {};\ndebtType = {value: DebtTypes.AUTO};\n\nconst DebtFormComponent = ({ personList, addDebt }) => (\n    <form ref={(el) => (formRef = el)}\n          onSubmit={e => {\n            e.preventDefault();\n\n            if (!debtType.value\n                || !+lendableEquity.value.trim()\n                || !+totalValue.value.trim()\n                || !+amountOwed.value.trim()\n                || !+monthlyPayment.value.trim()\n                || !+interestRate.value.trim()\n                || !+remainingTermMonths.value.trim()\n                || !+interestRate.value.trim()) {\n              return\n            }\n\n            addDebt({\n              debtType: debtType.value,\n              lendableEquity: +lendableEquity.value.trim(),\n              totalValue: +totalValue.value.trim(),\n              amountOwed: +amountOwed.value.trim(),\n              monthlyPayment: +monthlyPayment.value.trim(),\n              remainingTermMonths: +remainingTermMonths.value.trim(),\n              interestRate: +interestRate.value.trim(),\n              isConsolidated: isConsolidated.checked,\n              isNewDebt: isNewDebt.checked,\n              clients: clients.filter(c => c.node.checked).map(c => c.id)\n            });\n\n            formRef.reset();\n            debtType.value = DebtTypes.AUTO;\n            debtType.focus();\n          }}>\n      <div className=\"row\">\n        <div className=\"col\">\n          <label htmlFor=\"type\">Type</label>\n          <select id=\"type\"\n                  className=\"form-control\"\n                  ref={node => (debtType = node)}\n                  onChange={event => {lendableEquity.value = getDefaultLendableEquity(debtType.value)}}\n          >\n            {Object.keys(DebtTypes).map(debtType =>\n              <option key={DebtTypes[debtType]} value={DebtTypes[debtType]}>{DebtTypes[debtType]}</option>\n            )}\n          </select>\n        </div>\n        <div className=\"col\">\n          <label htmlFor=\"lendableEquity\"\n                 className=\"text-nowrap\" >Lendable Equity</label>\n          <input id=\"lendableEquity\"\n                 defaultValue={getDefaultLendableEquity(debtType.value)}\n                 type=\"number\"\n                 className=\"form-control\"\n                 min={0}\n                 step={0.01}\n                 ref={node => (lendableEquity = node)}\n                 required />\n        </div>\n        <div className=\"col\">\n          <label htmlFor=\"totalValue\"\n                 className=\"text-nowrap\" >Total Value</label>\n          <input id=\"totalValue\"\n                 type=\"number\"\n                 className=\"form-control\"\n                 min={0}\n                 step={0.01}\n                 ref={node => (totalValue = node)}\n                 required />\n        </div>\n        <div className=\"col\">\n          <label htmlFor=\"amountOwed\"\n                 className=\"text-nowrap\" >Amount Owed</label>\n          <input id=\"amountOwed\"\n                 type=\"number\"\n                 className=\"form-control\"\n                 min={0}\n                 step={0.01}\n                 ref={node => (amountOwed = node)}\n                 required />\n        </div>\n        <div className=\"col\">\n          <label htmlFor=\"monthlyPayment\"\n                 className=\"text-nowrap\">Monthly Payment</label>\n          <input id=\"monthlyPayment\"\n                 type=\"number\"\n                 className=\"form-control\"\n                 min={0}\n                 step={0.01}\n                 ref={node => (monthlyPayment = node)}\n                 required />\n        </div>\n        <div className=\"col\">\n          <label htmlFor=\"remainingTermMonths\"\n                 className=\"text-nowrap\">Remaining Term <small>(Months)</small></label>\n          <input id=\"remainingTermMonths\"\n                 type=\"number\"\n                 className=\"form-control\"\n                 min={0}\n                 step={0.01}\n                 ref={node => (remainingTermMonths = node)}\n                 required />\n        </div>\n        <div className=\"col\">\n          <label htmlFor=\"interestRate\"\n                 className=\"text-nowrap\">Interest Rate</label>\n          <input id=\"interestRate\"\n                 type=\"number\"\n                 className=\"form-control\"\n                 min={0}\n                 step={0.01}\n                 ref={node => (interestRate = node)}\n                 required />\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-auto\">\n          <input id=\"isConsolidated\"\n                 defaultChecked={false}\n                 type='checkbox'\n                 ref={node => (isConsolidated = node)}/>\n          <label htmlFor=\"isConsolidated\" className=\"pl-2\">Consolidated</label>\n        </div>\n        <div className=\"col-auto\">\n          <input id=\"isNewDebt\"\n                 defaultChecked={false}\n                 type='checkbox'\n                 ref={node => (isNewDebt = node)}/>\n          <label htmlFor=\"isNewDebt\" className=\"pl-2\">New Debt</label>\n        </div>\n      </div>\n\n      <fieldset>\n        <legend>Clients</legend>\n        <div className=\"row\">\n          {personList.map(person =>\n              <div key={person.id}\n                   className=\"col-auto\">\n                <input id={'isClient'+person.id}\n                       defaultChecked={false}\n                       type='checkbox'\n                       ref={node => (clients[person.id] = {node: node, id: person.id})}/>\n                <label htmlFor={'isClient'+person.id} className=\"pl-2\">{person.name}</label>\n              </div>\n          )}\n        </div>\n      </fieldset>\n      <button className=\"btn btn-primary\" type=\"submit\">Add Debt</button>\n    </form>\n)\n\nDebtFormComponent.propTypes = {\n  addDebt: PropTypes.func.isRequired\n}\n\nexport default DebtFormComponent","export const PersonEvents = {\n  ADD_PERSON: 'ADD_PERSON',\n  UPDATE_PERSON_BORROWER: 'UPDATE_PERSON_BORROWER',\n  DELETE_PERSON: 'DELETE_PERSON',\n}","import {PersonEvents} from \"./person.constants\";\n\nconst personReducer = (state = [], action) => {\n  switch (action.type) {\n\n    case PersonEvents.ADD_PERSON:\n      return [...state, action.payload]\n\n    case PersonEvents.DELETE_PERSON:\n      return [...state.filter(person => person.id !== action.id)];\n\n    case PersonEvents.UPDATE_PERSON_BORROWER:\n      return state.map(\n          person =>\n              person.id === action.personBorrower.id\n                  ? Object.assign({}, person, {isBorrower: action.personBorrower.isBorrower})\n                  : person\n      )\n\n    default:\n      return state\n  }\n}\n\nexport default personReducer","export const DebtEvents = {\n  ADD_DEBT: 'ADD_DEBT',\n  DELETE_DEBT: 'DELETE_DEBT',\n  UPDATE_IS_CONSOLIDATED: 'UPDATE_IS_CONSOLIDATED',\n  UPDATE_IS_NEW_DEBT: 'UPDATE_IS_NEW_DEBT',\n  UPDATE_CLIENT: 'UPDATE_CLIENT'\n}\n\nexport const DebtTypes = {\n  AUTO: 'Auto',\n  HOME: 'Home',\n  INVESTMENT_PROPERTY: 'Investment Property',\n  INVESTMENT: 'Investment',\n  UNSECURED: 'Unsecured',\n  OTHER: 'Other',\n}\n\nexport const getDefaultLendableEquity = debtType => {\n  switch (debtType) {\n    case DebtTypes.AUTO:\n      return 125\n    case DebtTypes.HOME:\n    case DebtTypes.OTHER:\n      return 100\n    case DebtTypes.INVESTMENT_PROPERTY:\n      return 75\n    case DebtTypes.INVESTMENT:\n      return 50\n    default:\n      return 0\n  }\n}\n","import {DebtEvents} from \"./debt.constants\";\nimport {PersonEvents} from \"../person/person.constants\";\n\nconst debtClientReducer = (state = [], action) => {\n  switch (action.type) {\n\n    case DebtEvents.UPDATE_CLIENT:\n      return action.debtClient.isClient\n          ? [...state.filter(c => c !== action.debtClient.personId), action.debtClient.personId]\n          : state.filter(c => c !== action.debtClient.personId)\n\n    case PersonEvents.DELETE_PERSON:\n      return state.filter(c => c !== action.id)\n\n    default:\n      return state\n  }\n}\n\nexport default debtClientReducer","import {DebtEvents} from \"./debt.constants\";\nimport debtClientReducer from \"./debt-client.reducer\";\nimport {PersonEvents} from \"../person/person.constants\";\n\nconst debtReducer = (state = [], action) => {\n  switch (action.type) {\n\n    case DebtEvents.ADD_DEBT:\n      return [...state, action.debt]\n\n    case DebtEvents.DELETE_DEBT:\n      return [...state.filter(debt => debt.id !== action.id)]\n\n    case DebtEvents.UPDATE_IS_CONSOLIDATED:\n      return state.map(\n          debt =>\n              debt.id === action.debtConsolidated.id\n                  ? Object.assign({}, debt, {isConsolidated: action.debtConsolidated.isConsolidated})\n                  : debt\n      )\n\n    case DebtEvents.UPDATE_IS_NEW_DEBT:\n      return state.map(\n          debt =>\n              debt.id === action.debtIsNew.id\n                  ? Object.assign({}, debt, {isNewDebt: action.debtIsNew.isNewDebt})\n                  : debt\n      )\n\n    case DebtEvents.UPDATE_CLIENT:\n      return state.map(\n          debt =>\n              debt.id === action.debtClient.debtId\n                  ? Object.assign({}, debt, {clients: debtClientReducer(debt.clients, action)})\n                  : debt\n      )\n\n    case PersonEvents.DELETE_PERSON:\n      return state.map(\n          debt => Object.assign({}, debt, {clients: debtClientReducer(debt.clients, action)})\n      )\n\n    default:\n      return state\n  }\n}\n\nexport default debtReducer","import { combineReducers } from 'redux'\nimport personReducer from './person/person.reducer'\nimport debtReducer from './debt/debt.reducer'\n\n\nexport default combineReducers({\n  personList: personReducer,\n  debtList: debtReducer\n})","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst PrintState = ({ state }) => (\n    <div className=\"row mb-3\">\n      <div className=\"col-auto\">\n        <button className=\"btn btn-outline-warning\"\n                onClick={() => console.log(state)}>Log Redux State</button>\n      </div>\n    </div>\n)\n\nPrintState.propTypes = {\n  state: PropTypes.any.isRequired,\n}\n\nexport default PrintState","import { connect } from 'react-redux'\nimport PrintState from \"./print-state.component\";\n\nconst mapStateToProps = state => ({\n  state: state\n})\n\nconst mapDispatchToProps = dispatch => ({\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PrintState)","import {PersonEvents} from \"./person.constants\";\n\nlet nextPersonId = 0\nexport const addPerson = person => {\n  person.id = nextPersonId++\n  return {\n    type: PersonEvents.ADD_PERSON,\n    payload: person\n  }\n}\n\nexport const deletePerson = id => ({\n  type: PersonEvents.DELETE_PERSON,\n  id\n})\n\nexport const updatePersonBorrower = personBorrower => ({\n  type: PersonEvents.UPDATE_PERSON_BORROWER,\n  personBorrower\n})","import { connect } from 'react-redux'\nimport {addPerson} from '../../redux/person/person.actions'\nimport PersonFormComponent from \"./person-form.component\";\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onAddPerson: person => dispatch(addPerson(person))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PersonFormComponent)","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst BorrowerCheckComponent = ({ id, isBorrower, updatePersonBorrower }) => (\n  <div>\n    <input type=\"checkbox\"\n         id={'isBorrowerCheck'+id}\n         defaultChecked={isBorrower}\n         onChange={ event => {\n           updatePersonBorrower({\n               id: id,\n               isBorrower: event.target.checked\n           });\n         }}/>\n    {/*<label for={'isBorrowerCheck'+id}>{String(isBorrower)}</label>*/}\n  </div>\n)\n\nBorrowerCheckComponent.propTypes = {\n  id: PropTypes.number.isRequired,\n  isBorrower: PropTypes.bool.isRequired,\n  updatePersonBorrower: PropTypes.func.isRequired,\n}\n\nexport default BorrowerCheckComponent","import React from 'react'\nimport PropTypes from 'prop-types'\nimport NumberFormat from 'react-number-format';\nimport BorrowerCheckComponent from \"./borrower-check.component\";\n\nconst PersonTableRowComponent = ({ person, onDelete, updatePersonBorrower }) => (\n    <tr>\n      <td className=\"text-left\">{person.name}</td>\n      <td className=\"text-right\"><NumberFormat value={person.annualIncome} displayType={'text'} thousandSeparator={true} prefix={'$'} /></td>\n      <td className=\"text-center\">\n        <BorrowerCheckComponent isBorrower={person.isBorrower}\n                                id={person.id}\n                                updatePersonBorrower={updatePersonBorrower}/>\n      </td>\n      <td className=\"text-center\">\n        <button className=\"btn btn-sm btn-danger\"\n                onClick={onDelete}>\n          Delete\n        </button>\n      </td>\n    </tr>\n)\n\nPersonTableRowComponent.propTypes = {\n  person: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    annualIncome:  PropTypes.number.isRequired,\n    isBorrower: PropTypes.bool.isRequired,\n  }).isRequired,\n  onDelete: PropTypes.func.isRequired,\n  updatePersonBorrower: PropTypes.func.isRequired,\n}\n\nexport default PersonTableRowComponent","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PersonTableRowComponent from './person-table-row.component';\n\nconst PersonTable = ({ personList, deletePerson, updatePersonBorrower }) => (\n    <table className=\"table table-hover\">\n      <thead>\n        <tr>\n          <th className=\"text-left\">Name</th>\n          <th className=\"text-right\">Annual Income</th>\n          <th className=\"text-center\">Is Borrower</th>\n          <th className=\"text-center\">Remove</th>\n        </tr>\n      </thead>\n      <tbody>\n        {personList.map(person => (\n            <PersonTableRowComponent key={person.id}\n                                     person={person}\n                                     onDelete={() => deletePerson(person.id)}\n                                     updatePersonBorrower={updatePersonBorrower}\n            />\n        ))}\n      </tbody>\n    </table>\n)\n\nPersonTable.propTypes = {\n  personList: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        annualIncome:  PropTypes.number.isRequired,\n        isBorrower: PropTypes.bool.isRequired,\n      }).isRequired\n  ).isRequired,\n  deletePerson: PropTypes.func.isRequired,\n  updatePersonBorrower: PropTypes.func.isRequired,\n}\n\nexport default PersonTable","import { connect } from 'react-redux'\nimport PersonTable from \"./person-table.component\";\nimport {deletePerson, updatePersonBorrower} from \"../../redux/person/person.actions\";\n\nconst mapStateToProps = state => ({\n  personList: state.personList\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  deletePerson: id => dispatch(deletePerson(id)),\n  updatePersonBorrower: personBorrower => dispatch(updatePersonBorrower(personBorrower))\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PersonTable)","import {DebtEvents} from \"./debt.constants\";\n\nlet nextDebt = 0\nexport const addDebt = (debt) => {\n  debt.id = nextDebt++\n  return {\n    type: DebtEvents.ADD_DEBT,\n    debt\n  }\n}\n\nexport const deleteDebt = id => ({\n  type: DebtEvents.DELETE_DEBT,\n  id\n})\n\nexport const updateIsConcolidated = debtConsolidated => ({\n  type: DebtEvents.UPDATE_IS_CONSOLIDATED,\n  debtConsolidated\n})\n\nexport const updateIsNewDebt = debtIsNew => ({\n  type: DebtEvents.UPDATE_IS_NEW_DEBT,\n  debtIsNew\n})\n\nexport const updateClient = debtClient => ({\n  type: DebtEvents.UPDATE_CLIENT,\n  debtClient\n})","import { connect } from 'react-redux'\nimport {addDebt} from \"../../redux/debt/debt.actions\";\nimport DebtFormComponent from \"./debt-form.component\";\n\nconst mapStateToProps = state => ({\n  personList: state.personList,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  addDebt: debt => dispatch(addDebt(debt)),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(DebtFormComponent)","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ConsolidatedCheckComponent = ({ id, isConsolidated, updateIsConsolidated }) => (\n  <div>\n    <input type=\"checkbox\"\n         id={'isConsolidated'+id}\n         defaultChecked={isConsolidated}\n         onChange={ event => {\n           updateIsConsolidated({\n               id: id,\n               isConsolidated: event.target.checked\n           });\n         }}/>\n  </div>\n)\n\nConsolidatedCheckComponent.propTypes = {\n  id: PropTypes.number.isRequired,\n  isConsolidated: PropTypes.bool.isRequired,\n  updateIsConsolidated: PropTypes.func.isRequired,\n}\n\nexport default ConsolidatedCheckComponent","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst NewDebtCheckComponent = ({ id, isNewDebt, updateIsNewDebt }) => (\n  <div>\n    <input type=\"checkbox\"\n         id={'isNewDebt'+id}\n         defaultChecked={isNewDebt}\n         onChange={ event => {\n           updateIsNewDebt({\n               id: id,\n               isNewDebt: event.target.checked\n           });\n         }}/>\n  </div>\n)\n\nNewDebtCheckComponent.propTypes = {\n  id: PropTypes.number.isRequired,\n  isNewDebt: PropTypes.bool.isRequired,\n  updateIsNewDebt: PropTypes.func.isRequired,\n}\n\nexport default NewDebtCheckComponent","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nconst ClientCheckComponent = ({ debt, person, updateClient }) => (\n    <div>\n      <input type=\"checkbox\"\n             id={'clientDebt'+debt.id+'person'+person.id}\n             defaultChecked={debt.clients.indexOf(person.id) >= 0}\n             onChange={ event => {\n               updateClient({\n                 debtId: debt.id,\n                 personId: person.id,\n                 isClient: event.target.checked\n               });\n             }}/>\n      <label className=\"pl-1\" htmlFor={'clientDebt'+debt.id+'person'+person.id}>{person.name}</label>\n    </div>\n)\n\nClientCheckComponent.propTypes = {\n  debt: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    clients: PropTypes.arrayOf(PropTypes.number.isRequired)\n  }).isRequired,\n  person: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n  updateClient: PropTypes.func.isRequired,\n}\n\nexport default ClientCheckComponent","import React from 'react'\nimport PropTypes from 'prop-types'\nimport NumberFormat from 'react-number-format';\nimport ConsolidatedCheckComponent from \"./is-consolidated-check.component\";\nimport NewDebtCheckComponent from \"./is-new-debt-check.component\";\nimport ClientCheckComponent from \"./is-client-check.component\";\n\nconst DebtTableRowComponent = ({ debt, personList, onDelete, updateIsConsolidated, updateIsNewDebt, updateClient }) => (\n    <tr>\n      <td className=\"text-left\">{debt.debtType}</td>\n      <td className=\"text-right\">{debt.lendableEquity}%</td>\n      <td className=\"text-right\">\n        <NumberFormat value={debt.totalValue}\n                      displayType={'text'}\n                      thousandSeparator={true}\n                      prefix={'$'} />\n      </td>\n      <td className=\"text-right\">\n        <NumberFormat value={debt.amountOwed}\n                      displayType={'text'}\n                      thousandSeparator={true}\n                      prefix={'$'} />\n      </td>\n      <td className=\"text-right\">\n        <NumberFormat value={debt.monthlyPayment}\n                      displayType={'text'}\n                      thousandSeparator={true}\n                      prefix={'$'} />\n      </td>\n      <td className=\"text-right\">\n        {debt.remainingTermMonths}\n      </td>\n      <td className=\"text-right\">\n        {debt.interestRate}%\n      </td>\n      <td className=\"text-center\">\n        <ConsolidatedCheckComponent id={debt.id}\n                                    isConsolidated={debt.isConsolidated}\n                                    updateIsConsolidated={updateIsConsolidated}/>\n      </td>\n      <td className=\"text-center\">\n        <NewDebtCheckComponent id={debt.id}\n                               isNewDebt={debt.isNewDebt}\n                               updateIsNewDebt={updateIsNewDebt} />\n      </td>\n      <td>\n        {personList.map(person => (\n          <div key={debt.id+'=>'+person.id} className=\"text-nowrap\">\n            <ClientCheckComponent debt={debt}\n                                  person={person}\n                                  updateClient={updateClient}/>\n          </div>\n        ))}\n      </td>\n      <td className=\"text-center\">\n        <button className=\"btn btn-sm btn-danger\"\n                onClick={onDelete}>\n          Delete\n        </button>\n      </td>\n    </tr>\n)\n\nDebtTableRowComponent.propTypes = {\n  debt: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        debtType: PropTypes.string.isRequired,\n        totalValue:  PropTypes.number.isRequired,\n        amountOwed:  PropTypes.number.isRequired,\n        interestRate:  PropTypes.number.isRequired,\n        monthlyPayment:  PropTypes.number.isRequired,\n        remainingTermMonths:  PropTypes.number.isRequired,\n        isConsolidated: PropTypes.bool.isRequired,\n        isNewDebt: PropTypes.bool.isRequired,\n        clients: PropTypes.arrayOf(PropTypes.number.isRequired)\n      }).isRequired,\n  onDelete: PropTypes.func.isRequired,\n  updateIsConsolidated: PropTypes.func.isRequired,\n  updateIsNewDebt: PropTypes.func.isRequired,\n  updateClient: PropTypes.func.isRequired,\n}\n\nexport default DebtTableRowComponent","import React from 'react'\nimport PropTypes from 'prop-types'\nimport DebtTableRowComponent from \"./debt-table-row.component\";\n\nconst DebtTableComponent = ({ debtList, personList, deleteDebt, updateIsConsolidated, updateIsNewDebt, updateClient }) => (\n    <table className=\"table table-hover\">\n      <thead>\n        <tr>\n          <th className=\"text-left\">Type</th>\n          <th className=\"text-right\">Lendable Equity</th>\n          <th className=\"text-right\">Total Value</th>\n          <th className=\"text-right\">Amount Owed</th>\n          <th className=\"text-right\">Monthly Payment</th>\n          <th className=\"text-right\">Remaining Term <small>(Months)</small></th>\n          <th className=\"text-right\">Interest Rate</th>\n          <th>Consolidated</th>\n          <th>New Debt</th>\n          <th>Clients</th>\n          <th className=\"text-center\">Action</th>\n        </tr>\n      </thead>\n      <tbody>\n        {debtList.map(debt => (\n            <DebtTableRowComponent key={debt.id}\n                                   debt={debt}\n                                   personList={personList}\n                                   onDelete={() => deleteDebt(debt.id)}\n                                   updateIsConsolidated={updateIsConsolidated}\n                                   updateIsNewDebt={updateIsNewDebt}\n                                   updateClient={updateClient}/>\n        ))}\n\n      </tbody>\n    </table>\n)\n\nDebtTableComponent.propTypes = {\n  debtList: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        debtType: PropTypes.string.isRequired,\n        totalValue:  PropTypes.number.isRequired,\n        amountOwed:  PropTypes.number.isRequired,\n        interestRate:  PropTypes.number.isRequired,\n        monthlyPayment:  PropTypes.number.isRequired,\n        remainingTermMonths:  PropTypes.number.isRequired,\n        isConsolidated: PropTypes.bool.isRequired,\n        isNewDebt: PropTypes.bool.isRequired,\n        clients: PropTypes.arrayOf(PropTypes.number.isRequired)\n      }).isRequired\n  ).isRequired,\n  deleteDebt: PropTypes.func.isRequired,\n  updateIsConsolidated: PropTypes.func.isRequired,\n  updateIsNewDebt: PropTypes.func.isRequired,\n  updateClient: PropTypes.func.isRequired,\n}\n\nexport default DebtTableComponent\n","import connect from \"react-redux/es/connect/connect\";\nimport DebtTableComponent from \"./debt-table.component\";\nimport {deleteDebt, updateClient, updateIsConcolidated, updateIsNewDebt} from \"../../redux/debt/debt.actions\";\n\nconst mapStateToProps = state => ({\n  debtList: state.debtList,\n  personList: state.personList\n})\n\nconst mapDispatchToProps = dispatch => ({\n  deleteDebt: id => dispatch(deleteDebt(id)),\n  updateIsConsolidated: debtConsolidated => dispatch(updateIsConcolidated(debtConsolidated)),\n  updateIsNewDebt: debtIsNew => dispatch(updateIsNewDebt(debtIsNew)),\n  updateClient: debtClient => dispatch(updateClient(debtClient)),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(DebtTableComponent)","import React from 'react'\nimport NumberFormat from \"react-number-format\";\n\nconst getTotalAssets = (debtList) => (debtList.reduce((acc, {totalValue}) => acc + totalValue, 0))\nconst getTotalLiabilities = (debtList) => (debtList.reduce((acc, {amountOwed}) => acc + amountOwed, 0))\nconst getTotalLendableEquity = (debtList) => (debtList.reduce((acc, debt) => acc + (0.01 * debt.lendableEquity * debt.totalValue), 0))\n\nconst ResultsComponent = ({ personList, debtList }) => (\n    <div>\n      <div class=\"row\">\n        <dl class=\"col-auto\">\n          <dt>Total Assets</dt>\n          <dd className=\"text-right mb-3\">\n            <NumberFormat value={getTotalAssets(debtList)}\n                          displayType={'text'}\n                          thousandSeparator={true}\n                          prefix={'$'} />\n          </dd>\n\n          <dt>Total Liabilities</dt>\n          <dd className=\"text-right mb-3\">\n            <NumberFormat value={getTotalLiabilities(debtList)}\n                          displayType={'text'}\n                          thousandSeparator={true}\n                          prefix={'$'} />\n          </dd>\n\n          <dt>Lendable Equity</dt>\n          <dd className=\"text-right mb-3\">\n            <NumberFormat value={getTotalLendableEquity(debtList)}\n                          displayType={'text'}\n                          thousandSeparator={true}\n                          prefix={'$'} />\n          </dd>\n        </dl>\n      </div>\n    </div>\n)\n\nexport default ResultsComponent","import { connect } from 'react-redux'\nimport ResultsComponent from './results.component'\n\nconst mapStateToProps = state => ({\n  personList: state.personList,\n  debtList: state.debtList\n})\n\nconst mapDispatchToProps = dispatch => ({\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ResultsComponent)","import React from 'react'\nimport AddPerson from \"./person/person-form.container\";\nimport PersonList from \"./person/person-table.container\";\nimport AddDebt from \"./debt/debt-form.container\";\nimport DebtTable from \"./debt/debt-table.container\";\nimport Results from \"./results/results.container\"\n\nconst getDisabled = (personList, debtList) => {\n  return personList.length > 0 && debtList.length > 0\n    ? \"\"\n    : \"disabled\"\n}\n\n\nconst TabsComponent = ({ personList, debtList }) => (\n    <div>\n      <nav>\n        <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n          <a className=\"nav-item nav-link active\" id=\"nav-person-tab\" data-toggle=\"tab\" href=\"#nav-person-list\" role=\"tab\" aria-controls=\"nav-person-list\" aria-selected=\"true\">Clients</a>\n          <a className=\"nav-item nav-link\" id=\"nav-debt-tab\" data-toggle=\"tab\" href=\"#nav-debt-list\" role=\"tab\" aria-controls=\"nav-debt-list\" aria-selected=\"false\">Debts</a>\n          <a className={\"nav-item nav-link \"+getDisabled(personList, debtList)} id=\"nav-result-tab\" data-toggle=\"tab\" href=\"#nav-result-list\" role=\"tab\" aria-controls=\"nav-result-list\" aria-selected=\"false\">Results</a>\n        </div>\n      </nav>\n      <div className=\"tab-content\" id=\"nav-tabContent\">\n        <div className=\"tab-pane fade show active\" id=\"nav-person-list\" role=\"tabpanel\" aria-labelledby=\"nav-home-tab\">\n          <h2>Clients</h2>\n          <AddPerson />\n          <div className=\"mt-3\">\n            <PersonList />\n          </div>\n        </div>\n        <div className=\"tab-pane fade\" id=\"nav-debt-list\" role=\"tabpanel\" aria-labelledby=\"nav-profile-tab\">\n          <h2>Debts</h2>\n          <AddDebt />\n          <div className=\"mt-3\">\n            <DebtTable />\n          </div>\n        </div>\n        <div className=\"tab-pane fade\" id=\"nav-result-list\" role=\"tabpanel\" aria-labelledby=\"nav-contact-tab\">\n          <h2>Results</h2>\n          <div className=\"mt-3\">\n            <Results />\n          </div>\n        </div>\n      </div>\n    </div>\n)\n\nexport default TabsComponent","import { connect } from 'react-redux'\nimport TabsComponent from \"./tabs.component\";\n\nconst mapStateToProps = state => ({\n  personList: state.personList,\n  debtList: state.debtList\n})\n\nconst mapDispatchToProps = dispatch => ({\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TabsComponent)","import React from 'react'\nimport PrintState from \"./debug/print-state.container\";\nimport Tabs from \"./tabs.container\";\n\nconst App = () => (\n    <div className=\"container\">\n\n      <h1>Re-fi Calculator</h1>\n\n      <Tabs />\n\n      <PrintState />\n    </div>\n)\n\nexport default App","import {addPerson} from \"./redux/person/person.actions\";\nimport {addDebt} from \"./redux/debt/debt.actions\";\nimport {DebtTypes, getDefaultLendableEquity} from \"./redux/debt/debt.constants\";\n\nconst loadData = (store) => {\n\n  // loading people\n  store.dispatch(addPerson({name:'Jack Johnson', annualIncome:88000, isBorrower:true}))\n  store.dispatch(addPerson({name:'Jill Johnson', annualIncome:98000, isBorrower:true}))\n  store.dispatch(addPerson({name:'Tom Jones', annualIncome:103000, isBorrower:false}))\n\n  // loading debts\n  store.dispatch(addDebt({\n    debtType: DebtTypes.HOME,\n    lendableEquity: getDefaultLendableEquity(DebtTypes.HOME),\n    totalValue: 100000,\n    amountOwed: 80000,\n    monthlyPayment: 400,\n    interestRate: 5,\n    remainingTermMonths: 300,\n    isConsolidated: false,\n    isNewDebt: true,\n    clients:[0,1]\n  }))\n  store.dispatch(addDebt({\n    debtType: DebtTypes.AUTO,\n    lendableEquity: getDefaultLendableEquity(DebtTypes.AUTO),\n    totalValue: 35000,\n    amountOwed: 10000,\n    monthlyPayment: 200,\n    interestRate: 6,\n    remainingTermMonths: 30,\n    isConsolidated: true,\n    isNewDebt: false,\n    clients:[1]\n  }))\n\n}\n\nexport default loadData","import 'bootstrap/dist/css/bootstrap.min.css';\n// import $ from 'jquery';\n// import Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './redux/index.reducer'\nimport App from './react/App'\nimport loadData from \"./load-test-data\";\n\nconst store = createStore(rootReducer);\n\nloadData(store);\n\nrender(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}